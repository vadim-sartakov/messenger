scalar Date

type User {
  _id: ID!
  name: String!
  color: String!
}

type Message {
  _id: ID!
  author: User!
  content: String!
  createdAt: Date!
}

type Chat {
  _id: ID!
  name: String
  inviteLink: String!
  participants: [User!]!
  color: String!
  messages(limit: Int): [Message!]!
}

type Query {
  me: User!
  getChats: [Chat!]!
  getChat(id: ID!): Chat!
}

input ChatInput {
  name: String!
}

type Mutation {
  createChat(value: ChatInput!): Chat!
  joinChat(inviteLink: String!): Chat!
  postMessage(chat: ID!, content: String!): Message!
}