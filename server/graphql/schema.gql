type Colors {
  text: String!
  background: String!
}

type User {
  _id: ID!
  name: String!
  colors: Colors!
  chats: [Chat!]
}

type Message {
  _id: ID!
  chat: Chat!
  author: User!
  content: String!
}

type Chat {
  _id: ID!
  name: String
  participants: [User!]!
  colors: Colors!
  messages: [Message!]!
}

type Query {
  chats: [Chat!]!
  findUser(string: String!): User
}

input ReferenceInput {
  _id: ID!
}

input ChatInput {
  name: String
  participants: [ReferenceInput!]
}

type Mutation {
  createChat(value: ChatInput!): Chat!
}